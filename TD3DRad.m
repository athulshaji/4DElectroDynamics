%% ----------------------------------------------------------------------
%   Program: FDTD3DRad.m, VERSION 2 (28th July 2021)
%   Additions: (1) Inclusion of metal traces from NASTRAN files
%              (2) Integration with SPICE based circuit solver
%   Author:  Athul Shaji, Microwave Lab, ECE, IISc Bangalore
%   What does this code do? --> The code employs Finite Difference Time Domain
%   (FDTD) algorithm for analysing 3D Electromagnetic (EM) radiation
%   problem. A differentiated Gaussian wave is sent from a specified location (read in from a text file) and this
%   wave interacts with the object in the simulation domain. this object in
%   the simulation domain is built using the inputs from a text file.
%
%   This code is developed with the help of the following references. (in
%   the oreder of their relevance in building this code.
%   [1] Allen Taflove and Susan C. Hagness (2005). Computational Electrodynamics: The Finite-Difference Time-Domain Method, 3rd ed. Artech House Publishers
%   [2] Taflove, A., Oskooi, A., & Johnson, S. G. (2013). Advances in FDTD computational electrodynamics: Photonics and nanotechnology. Boston: Artech house.
%   [3] Kane Yee, "Numerical solution of initial boundary value problems involving maxwell's equations in isotropic media," in IEEE Transactions on Antennas and Propagation, vol. 14, no. 3, pp. 302-307, May 1966.
%   [4] J. Berenger (1994). "A perfectly matched layer for the absorption of electromagnetic waves". Journal of Computational Physics. 114 (2): 185–200.
%   [5] https://empossible.net/academics/emp5304/ (not sure whether this is still accesible)
%   [6] W. C. Chew and W. H. Weedon (1994). "A 3d perfectly matched medium from modified Maxwell's equations with stretched coordinates". Microwave Optical Tech. Letters. 7 (13): 599–604.
%   [7] F. L. Teixeira W. C. Chew (1998). "General closed-form PML constitutive tensors to match arbitrary bianisotropic and dispersive linear media". IEEE Microwave and Guided Wave Letters. 8 (6): 223–225.
%% ----------------------------------------------------------------------
function TD3DRad % VERSION 2
clear variables; clc; close all;format long;
%% GENERATE NODELIST AND ELEMENTLIST
% The following 2 lines of code are for generating the nodelist and element 
% list for the 3D geometry like substrate and for the 2D geometry like the
% metal tracelines on the PCB. Enable or disable these 2 lines accordingly.

% generateNodeListElementListFromNASTRAN_3D('fr4_mesh_bjt_ckt.nas');
%generateNodeListElementListFromNASTRAN_2D('metal-strip_bjt_ckt.nas');

%generateNodeListElementListFromNASTRAN_3D('dielectric_slab.nas');

%generateNodeListElementListFromNASTRAN_2D('dipole_antenna.nas');
% generateNodeListElementListFromNASTRAN_3D('Rogers_RT6002.nas');
% generateNodeListElementListFromNASTRAN_2D('asymmetrical_dipole_antenna.nas');

%%
% antenna_with_cps_lines; % enter the name of the MATLAB script generated using the GMSH software
% MESH=msh;
% clear msh;
% metal_trace_nodes=MESH.POS/1000;
% metal_trace_nodes(:,3)=0.0008;
%% Choice of Solver

SOLVER = [0 1 0];
FDTD = SOLVER(1); % structured grid
CN_FDTD = SOLVER(2); S = 2; % structured grid
MESHLESS = SOLVER(3); % meshless method like RPIM

%% Simulation Constants
c = 299792458;   % Speed of Light
mu = 4.0*pi*1.0e-7; % Free space permeability
eps = 1.0/c^2/mu;   % Free space permittivity
epsr = 1.0;           % Relative permittiviy
mur = 1.0;            % Relative permeability2
eta = sqrt(mu*mur/eps/epsr); % Wave impedance
global sim_domain_materials;
%% Simulation Enviroment Properties
[ pml_thickness, pml_order, pml_rdesired, pml_sigmafactor,...
    pml_kappamax, pml_alphamin, pml_alphamax] = PML_properties('PML_properties.txt');

% Wave parameters
[freq,incidentwave_ETheta,incidentwave_EPhi,incidentwave_inctheta,incidentwave_incphi] = wave_parameters('wave_parameters.txt');

fmax=freq;  % Maximum observation frquency
lambdamin=c/fmax; % meters. Minimum wavelength corresponds to maxium observation frequency

% Number of cells per wavelength
%N = num_cells_per_wavelength('num_cells_per_wavelength.txt');
%delx=lambdamin/N; % Unit cell size in x direction
delx = 0.001;% Unit cell size in x direction
dely=delx; % Unit cell size in y direction
delz=delx; % Unit cell size in z direction

T=20000/S;%2^15;% Total number of time steps

%% Simulation Materials
[ materials ] = material_properties('materials.txt');

%% Computational Domain
[lx, ly, lz, ux, uy, uz, freespace_cells] = computation_cell_dimensions('computation_cell_dimension.txt');

[nxtot, nytot, nztot, domain_lx, domain_ly, domain_lz, domain_ux, domain_uy, domain_uz, X, Y, Z] = create_FDTD_domain(delx, dely, delz, pml_thickness, lx, ly, lz, ux, uy, uz, freespace_cells);

%% Create Simulation Objects
Nodes = load('nodeList.txt');
Elements = load('elementList.txt');
generateNodeListElementListFromNASTRAN_2D('gnd.nas');
Nodes_2D=load('nodeList_2D.txt');
Elements_2D=load('elementList_2D.txt');
Nodes_2D(:,3)=-0.001;
modified_node_list = Preprocess(Elements, Nodes, materials);
global Idx_metal_region
Idx_metal_region=knnsearch(modified_node_list(:,1:3),Nodes_2D);
modified_node_list(Idx_metal_region,4)=1e100;% defining the metal as PEC; epsilon_r
modified_node_list(Idx_metal_region,5)=1;% defining the metal as PEC; mu_r
modified_node_list(Idx_metal_region,6)=1e100; % defining the metal as PEC; sigma
modified_node_list(Idx_metal_region,7)=0; % sigma_m

generateNodeListElementListFromNASTRAN_2D("top-patch.nas");
Nodes_2D=load('nodeList_2D.txt');
Elements_2D=load('elementList_2D.txt');
Nodes_2D(:,3)=0.001;
Idx_metal_region=knnsearch(modified_node_list(:,1:3),Nodes_2D);
modified_node_list(Idx_metal_region,4)=1e100;% defining the metal as PEC; epsilon_r
modified_node_list(Idx_metal_region,5)=1;% defining the metal as PEC; mu_r
modified_node_list(Idx_metal_region,6)=1e100; % defining the metal as PEC; sigma
modified_node_list(Idx_metal_region,7)=0; % sigma_m

% [rectprismlx, rectprismly, rectprismlz, rectprismux, rectprismuy, rectprismuz, sim_domain_materials] = create_simulation_obj(nxtot, nytot, nztot,...
%     delx, dely, delz, lx, ly, lz, ux, uy, uz, domain_lx, domain_ly, domain_lz);
[eps_x, eps_y, eps_z,...
    mu_x, mu_y, mu_z,...
    sigma_x, sigma_y, sigma_z,...
    sigmam_x, sigmam_y, sigmam_z,...
    sim_domain_materials] = create_simulation_obj(  nxtot,...
    nytot,...
    nztot,...
    delx,...
    dely,...
    delz,...
    domain_lx,...
    domain_ly,...
    domain_lz,...
    modified_node_list);

[freqs_of_interest, ffield_nangles, ffield_theta, ffield_phi, ...
    ffield_dirTheta, ffield_dir, ffield_dirPhi, ...
    ffield_is, ffield_js, ffield_ks, ...
    ffield_ie, ffield_je, ffield_ke, ...
    ffield_cx, ffield_cy, ffield_cz] = init_NF2FF(  'init_NF2FF.txt', ...
    nxtot, nytot, nztot);
% sim_domain_materials(:,:,22) = 1;
%% Excitation Source Properties
[tau, t0] = source(fmax);
%J0=-1.0*eps;
%% Resolution Parameters

% delt=delx/c/sqrt(3); % Assuming Increment in time (CFL Stability Condition)
if(FDTD)
    delxyz = sqrt((1/delx)^2 + (1/dely)^2 + (1/delz)^2);
    delt = 0.99/(c*delxyz);
end

if(CN_FDTD)
    delxyz = sqrt((1/delx)^2 + (1/dely)^2 + (1/delz)^2);
    delt = S/(c*delxyz);
end


%% Initialize FDTD Update Coefficents Arrays
[Ex, Ey, Ez, Hx, Hy, Hz, Exincident_current, Eyincident_current, Ezincident_current, ...
    Exincident_past, Eyincident_past, Ezincident_past, ...
    Hxincident_current, Hyincident_current, Hzincident_current, ...
    Hxincident_past, Hyincident_past, Hzincident_past] = init_FDTD(nxtot, nytot, nztot);

%% Initialize Simulation Space Materials
% Four neighbor averaging used for calculating material properties
% [eps_x, mu_x, sigma_x, sigmam_x, eps_y, mu_y, sigma_y, sigmam_y,...
%     eps_z, mu_z, sigma_z, sigmam_z] = avg_material_properties(materials, nxtot, nytot, nztot, sim_domain_materials,...
%     eps_x, eps_y, eps_z,...
%     mu_x, mu_y, mu_z, ...
%     sigma_x, sigma_y, sigma_z, ...
%     sigmam_x, sigmam_y, sigmam_z);
%---------------------------------------------------------------------------------------------------------------------------------------------------------
%% Initialize Incident Field Update Coefficents
[CEx_current, CEx_past, CEy_current, CEy_past, CEz_current, CEz_past, ...
    CHx_current, CHx_past, CHy_current, CHy_past, CHz_current, CHz_past ] = init_inc_field_coeff(eps_x, eps_y, eps_z, ...
    eps, mu_x, mu_y, mu_z, mu, delt, sigma_x, sigma_y, sigma_z, sigmam_x, sigmam_y, sigmam_z);

%% Initialize FDTD Updating Equations
%-----------------------------------------------------------------------------------------------------------------------------------------------------------
if(FDTD)
    [C1Ex, C2Ex, C3Ex, C1Ey, C2Ey, C3Ey, C1Ez, C2Ez, C3Ez, ...
        C1Hx, C2Hx, C3Hx, C1Hy, C2Hy, C3Hy, C1Hz, C2Hz, C3Hz] = init_FDTD_coeff(eps_x, eps_y, eps_z, ...
        eps, mu_x, mu_y, mu_z, mu, delt, delx, dely, delz, sigma_x, sigma_y, sigma_z, sigmam_x, sigmam_y, sigmam_z);
end

%-----------------------------------------------------------------------------------------------------------------------------------------------------------
%% Incident Field Parameters
[Exincamp, Eyincamp, Ezincamp, Hxincamp, Hyincamp, Hzincamp, ...
    d0, k_x, k_y, k_z, ...
    kr0, spatialshift, krEx, krEy, krEz, krHx, krHy, krHz] = init_inc_field_param(incidentwave_inctheta,...
    incidentwave_incphi, incidentwave_ETheta, incidentwave_EPhi, eta, nxtot, nytot, nztot, delx, dely, delz,...
    domain_lx, domain_ly, domain_lz, domain_ux, domain_uy, domain_uz);


%% Initialize CPML Parameters
if(FDTD)
    [Psi_ey_hz_xl, Psi_ez_hy_xl, Psi_hy_ez_xl, Psi_hz_ey_xl, ...
        CPsi_ey_hz_xl, CPsi_ez_hy_xl, CPsi_hy_ez_xl, CPsi_hz_ey_xl, ...
        Psi_ey_hz_xr, Psi_ez_hy_xr, Psi_hy_ez_xr, Psi_hz_ey_xr, ...
        CPsi_ey_hz_xr, CPsi_ez_hy_xr, CPsi_hy_ez_xr, CPsi_hz_ey_xr, ...
        Psi_ex_hz_yl, Psi_ez_hx_yl, Psi_hx_ez_yl, Psi_hz_ex_yl, ...
        CPsi_ex_hz_yl, CPsi_ez_hx_yl, CPsi_hx_ez_yl, CPsi_hz_ex_yl, ...
        Psi_ex_hz_yr, Psi_ez_hx_yr, Psi_hx_ez_yr, Psi_hz_ex_yr,...
        CPsi_ex_hz_yr, CPsi_ez_hx_yr, CPsi_hx_ez_yr, CPsi_hz_ex_yr, ...
        Psi_ex_hy_zl, Psi_ey_hx_zl, Psi_hx_ey_zl, Psi_hy_ex_zl, ...
        CPsi_ex_hy_zl, CPsi_ey_hx_zl, CPsi_hx_ey_zl, CPsi_hy_ex_zl,...
        Psi_ex_hy_zr, Psi_ey_hx_zr, Psi_hx_ey_zr, Psi_hy_ex_zr, ...
        CPsi_ex_hy_zr, CPsi_ey_hx_zr, CPsi_hx_ey_zr, CPsi_hy_ex_zr, ...
        bxl, bxml, axl, axml, bxr, bxmr, axr, axmr, ...
        byl, byml, ayl, ayml, byr, bymr, ayr, aymr, ...
        bzl, bzml, azl, azml, bzr, bzmr, azr, azmr,...
        C3Ey, C2Ez, C2Hy, C3Hz, ...
        C2Ex, C3Ez, C3Hx, C2Hz, ...
        C3Ex, C2Ey, C2Hx, C3Hy] = init_PML_param(C3Ey, C2Ez, C2Hy, C3Hz, C2Ex, C3Ez, C3Hx, C2Hz, C3Ex, C2Ey, C2Hx, C3Hy,...
        delx, dely, delz, delt, nxtot, nytot, nztot, pml_order, pml_thickness, pml_sigmafactor, pml_kappamax, pml_alphamin, ...
        pml_alphamax);
end


%% --------------------------------------------Initialize time domain electric andmagnetic current arrays-----------------------------------------
[   tdjyxp, tdjzxp, tdmyxp, tdmzxp,...
    tdjyxn, tdjzxn, tdmyxn, tdmzxn, ...
    tdjxyp, tdjzyp, tdmxyp, tdmzyp, ...
    tdjxyn, tdjzyn, tdmxyn, tdmzyn, ...
    tdjxzp, tdjyzp, tdmxzp, tdmyzp, ...
    tdjxzn, tdjyzn, tdmxzn, tdmyzn, ...
    fdjyxp, fdjzxp, fdmyxp, fdmzxp, ...
    fdjyxn, fdjzxn, fdmyxn, fdmzxn, ...
    fdjxyn, fdjzyn, fdmxyn, fdmzyn, ...
    fdjxyp, fdjzyp, fdmxyp, fdmzyp, ...
    fdjxzp, fdjyzp, fdmxzp, fdmyzp, ...
    fdjxzn, fdjyzn, fdmxzn, fdmyzn]     = init_TD_FD_J_M(   freqs_of_interest,...
    ffield_is, ffield_js, ffield_ks, ...
    ffield_ie, ffield_je, ffield_ke);


%% CN-FDTD

if(CN_FDTD)
    CN_FDTD_Solver( T, ...
        fmax,...
        nxtot,...
        nytot,...
        nztot,...
        t0, ...
        tau, ...
        delt, ...
        pml_thickness, ...
        krEx, ...
        krEy, ...
        krEz, ...
        krHx, ...
        krHy, ...
        krHz, ...
        Exincamp, ...
        Eyincamp, ...
        Ezincamp, ...
        Hxincamp, ...
        Hyincamp, ...
        Hzincamp, ...
        Exincident_current, ...
        Eyincident_current, ...
        Ezincident_current, ...
        Hxincident_current, ...
        Hyincident_current, ...
        Hzincident_current, ...
        Exincident_past, ...
        Eyincident_past, ...
        Ezincident_past, ...
        Hxincident_past, ...
        Hyincident_past, ...
        Hzincident_past, delx,dely,delz,S,...
        CHx_current, CHy_current, CHz_current, ...
        CHx_past, CHy_past, CHz_past, ...
        CEx_current, CEy_current, CEz_current, ...
        CEx_past, CEy_past, CEz_past, sigma_x,sigma_y,sigma_z,eps_x,eps_y,eps_z);
end


%% FDTD
if(FDTD)
    tic;
%     Zl=50;
    Z0=50;
    portx=[];
    porty=[];
    portz=[];
    Zl=[];
    %Z0=[];
    
    [  tdjyxp, tdjzxp, tdmyxp, tdmzxp,...
        tdjyxn, tdjzxn, tdmyxn, tdmzxn, ...
        tdjxyp, tdjzyp, tdmxyp, tdmzyp, ...
        tdjxyn, tdjzyn, tdmxyn, tdmzyn, ...
        tdjxzp, tdjyzp, tdmxzp, tdmyzp, ...
        tdjxzn, tdjyzn, tdmxzn, tdmyzn, ...
        fdjyxp, fdjzxp, fdmyxp, fdmzxp, ...
        fdjyxn, fdjzxn, fdmyxn, fdmzxn, ...
        fdjxyn, fdjzyn, fdmxyn, fdmzyn, ...
        fdjxyp, fdjzyp, fdmxyp, fdmzyp, ...
        fdjxzp, fdjyzp, fdmxzp, fdmyzp, ...
        fdjxzn, fdjyzn, fdmxzn, fdmyzn] = FDTD_Solver(     T, ...
        nxtot,...
        nytot,...
        nztot,...
        t0, ...
        tau, ...
        delt, ...
        pml_thickness, ...
        krEx, ...
        krEy, ...
        krEz, ...
        krHx, ...
        krHy, ...
        krHz, ...
        Exincamp, ...
        Eyincamp, ...
        Ezincamp, ...
        Hxincamp, ...
        Hyincamp, ...
        Hzincamp, ...
        Exincident_current, ...
        Eyincident_current, ...
        Ezincident_current, ...
        Hxincident_current, ...
        Hyincident_current, ...
        Hzincident_current, ...
        Exincident_past, ...
        Eyincident_past, ...
        Ezincident_past, ...
        Hxincident_past, ...
        Hyincident_past, ...
        Hzincident_past, ...
        CHx_current, CHy_current, CHz_current, ...
        CHx_past, CHy_past, CHz_past, ...
        CEx_current, CEy_current, CEz_current, ...
        CEx_past, CEy_past, CEz_past, ...
        Ex, Ey, Ez, Hx, Hy, Hz, ...
        C1Ex, C2Ex, C3Ex, C1Ey, C2Ey, C3Ey, C1Ez, C2Ez, C3Ez, ...
        C1Hx, C2Hx, C3Hx, C1Hy, C2Hy, C3Hy, C1Hz, C2Hz, C3Hz, ...
        Psi_ey_hz_xl, Psi_ez_hy_xl, Psi_hy_ez_xl, Psi_hz_ey_xl, ...
        CPsi_ey_hz_xl, CPsi_ez_hy_xl, CPsi_hy_ez_xl, CPsi_hz_ey_xl, ...
        Psi_ey_hz_xr, Psi_ez_hy_xr, Psi_hy_ez_xr, Psi_hz_ey_xr, ...
        CPsi_ey_hz_xr, CPsi_ez_hy_xr, CPsi_hy_ez_xr, CPsi_hz_ey_xr, ...
        Psi_ex_hz_yl, Psi_ez_hx_yl, Psi_hx_ez_yl, Psi_hz_ex_yl, ...
        CPsi_ex_hz_yl, CPsi_ez_hx_yl, CPsi_hx_ez_yl, CPsi_hz_ex_yl, ...
        Psi_ex_hz_yr, Psi_ez_hx_yr, Psi_hx_ez_yr, Psi_hz_ex_yr,...
        CPsi_ex_hz_yr, CPsi_ez_hx_yr, CPsi_hx_ez_yr, CPsi_hz_ex_yr, ...
        Psi_ex_hy_zl, Psi_ey_hx_zl, Psi_hx_ey_zl, Psi_hy_ex_zl, ...
        CPsi_ex_hy_zl, CPsi_ey_hx_zl, CPsi_hx_ey_zl, CPsi_hy_ex_zl,...
        Psi_ex_hy_zr, Psi_ey_hx_zr, Psi_hx_ey_zr, Psi_hy_ex_zr, ...
        CPsi_ex_hy_zr, CPsi_ey_hx_zr, CPsi_hx_ey_zr, CPsi_hy_ex_zr, ...
        bxl, bxml, axl, axml, bxr, bxmr, axr, axmr, ...
        byl, byml, ayl, ayml, byr, bymr, ayr, aymr, ...
        bzl, bzml, azl, azml, bzr, bzmr, azr, azmr, ...
        ffield_is, ffield_js, ffield_ks, ...
        ffield_ie, ffield_je, ffield_ke, ...
        freqs_of_interest, ...
        tdjyxp, tdjzxp, tdmyxp, tdmzxp,...
        tdjyxn, tdjzxn, tdmyxn, tdmzxn, ...
        tdjxyp, tdjzyp, tdmxyp, tdmzyp, ...
        tdjxyn, tdjzyn, tdmxyn, tdmzyn, ...
        tdjxzp, tdjyzp, tdmxzp, tdmyzp, ...
        tdjxzn, tdjyzn, tdmxzn, tdmyzn, ...
        fdjyxp, fdjzxp, fdmyxp, fdmzxp, ...
        fdjyxn, fdjzxn, fdmyxn, fdmzxn, ...
        fdjxyn, fdjzyn, fdmxyn, fdmzyn, ...
        fdjxyp, fdjzyp, fdmxyp, fdmzyp, ...
        fdjxzp, fdjyzp, fdmxzp, fdmyzp, ...
        fdjxzn, fdjyzn, fdmxzn, fdmyzn, ...
        portx, porty, portz, Zl, Z0,...
        delx, dely, delz,eps_x,eps_y,eps_z,sigma_x,sigma_y,sigma_z,freq);
    toc;
    disp(['Computational domain (', num2str(nxtot),',', num2str(nytot),',',num2str(nztot),') = ',num2str(nxtot*nytot*nztot)]);
end
%% Calculating the Directivity
tic;
Directivity_xz (T, ...
    tau, t0, delt, ...
    freqs_of_interest, ...
    eta, ffield_nangles, ...
    incidentwave_ETheta, ...
    incidentwave_EPhi, ...
    ffield_ie, ffield_je, ffield_ke, ...
    ffield_is, ffield_js, ffield_ks, ...
    delx, dely, delz, ...
    fdjyxp, fdjzxp, fdmyxp, fdmzxp, ...
    fdjyxn, fdjzxn, fdmyxn, fdmzxn, ...
    fdjxyn, fdjzyn, fdmxyn, fdmzyn, ...
    fdjxyp, fdjzyp, fdmxyp, fdmzyp, ...
    fdjxzp, fdjyzp, fdmxzp, fdmyzp, ...
    fdjxzn, fdjyzn, fdmxzn, fdmyzn);
toc;

tic;
Directivity_xy (T, ...
    tau, t0, delt, ...
    freqs_of_interest, ...
    eta, ffield_nangles, ...
    incidentwave_ETheta, ...
    incidentwave_EPhi, ...
    ffield_ie, ffield_je, ffield_ke, ...
    ffield_is, ffield_js, ffield_ks, ...
    delx, dely, delz, ...
    fdjyxp, fdjzxp, fdmyxp, fdmzxp, ...
    fdjyxn, fdjzxn, fdmyxn, fdmzxn, ...
    fdjxyn, fdjzyn, fdmxyn, fdmzyn, ...
    fdjxyp, fdjzyp, fdmxyp, fdmzyp, ...
    fdjxzp, fdjyzp, fdmxzp, fdmyzp, ...
    fdjxzn, fdjyzn, fdmxzn, fdmyzn);
toc;
% %% Radar Cross Section (RCS)computation
tic;
RCSxy(T, ...
    tau, t0, delt, ...
    freqs_of_interest, ...
    eta, ffield_nangles, ...
    incidentwave_ETheta, ...
    incidentwave_EPhi, ...
    ffield_ie, ffield_je, ffield_ke, ...
    ffield_is, ffield_js, ffield_ks, ...
    delx, dely, delz, ...
    fdjyxp, fdjzxp, fdmyxp, fdmzxp, ...
    fdjyxn, fdjzxn, fdmyxn, fdmzxn, ...
    fdjxyn, fdjzyn, fdmxyn, fdmzyn, ...
    fdjxyp, fdjzyp, fdmxyp, fdmzyp, ...
    fdjxzp, fdjyzp, fdmxzp, fdmyzp, ...
    fdjxzn, fdjyzn, fdmxzn, fdmyzn);
toc;
tic;
RCSxz(T, ...
    tau, t0, delt, ...
    freqs_of_interest, ...
    eta, ffield_nangles, ...
    incidentwave_ETheta, ...
    incidentwave_EPhi, ...
    ffield_ie, ffield_je, ffield_ke, ...
    ffield_is, ffield_js, ffield_ks, ...
    delx, dely, delz, ...
    fdjyxp, fdjzxp, fdmyxp, fdmzxp, ...
    fdjyxn, fdjzxn, fdmyxn, fdmzxn, ...
    fdjxyn, fdjzyn, fdmxyn, fdmzyn, ...
    fdjxyp, fdjzyp, fdmxyp, fdmzyp, ...
    fdjxzp, fdjyzp, fdmxzp, fdmyzp, ...
    fdjxzn, fdjyzn, fdmxzn, fdmyzn);
toc;
clear variables;
end